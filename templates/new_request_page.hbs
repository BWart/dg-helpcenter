<div class="container-divider"></div>
<div class="container">
  <nav class="sub-nav">
    {{breadcrumbs}}
    {{search submit=false}}
  </nav>

  <h1 class="Header" id="HeaderID" data-wording-key="headerTitle">
      <!--{{t 'submit_a_request'}}{{#if follow_up}}<span class='follow-up-hint'>{{follow_up}}</span>{{/if}}-->
  </h1>

  <div class="form requestform" id="requestForm">
    <h4 class="contactFormInfoTextClass regular" data-wording-key="contactFormInfoText"></h4>
    <!--<a class="button-back" data-wording-key="backButtonText"></a>-->
    <a class="text-back">&lt; <font data-wording-key="backButtonText"></font></a>
    <div class="contactFormNote">
      <div class="contactFormText">
        <h2><div class="contactFormTextTitel" data-wording-key="contactFormNoteTitel"></div></h2>
        <h4><div class="contactFormTextInfo"></div></h4>
        <!--<h4></h4>-->
      </div>
    </div>
    {{chat}}

    <!-- CONTACT FORM TABLES -->
    <div class="contactFormTextNoBorder">
      <table>
        <tr>
          <td class="contactButtonTableCellLeftNoBorder" border="0"><h2><div data-wording-key="questionNotAnswered"></div></h2></td>
        </tr>
      </table>
      <!-- DESKTOP TABLE -->
      <table class="contactFormTextNoBorder nomobile hideUnder767" border="0">
        <tr style="height:0px"></tr>
        <tr>
          <td class="contactButtonTableCellLeft"><h4 data-wording-key="email"></h4></td>
          <td class="contactButtonTableCellLeftLeftBorder"><h4 data-wording-key="phone"></h4></td>
          <td class="contactButtonTableCellLeftLeftBorder chatTableCell"><h4 class="chatLabel" data-wording-key="chat"></h4><div class="recommendedChannel" data-wording-key="recommendedChannel"></div></td>
        </tr>
        <tr>
          <td class="contactButtonTableCellLeft"><div class="button-contact contactFormWriteUs" data-wording-key="writeUs"></div></td>
          <td class="contactButtonTableCellLeftLeftBorder">
            <div class="button-contact phone-number private-number private-customer connect-customer" data-wording-key="callUsPrivate"></div>
            <div class="button-contact phone-number business-number business-customer" data-wording-key="callUsBusiness"></div>
          </td>
          <td class="contactButtonTableCellLeftLeftBorder chatTableCell"><div class="button-contact button-chat button-offline" data-wording-key="chatNotOnline"></div></td>
        </tr>
        <tr>
          <td class="contactButtonTableCellLeft"></td>
          <td class="contactButtonTableCellLeftLeftBorder"><div class="contact-info private-customer connect-customer" data-wording-key="openingHoursPrivate"></div><div class="contact-info business-customer" data-wording-key="openingHoursBusiness"></div></td>
          <td class="contactButtonTableCellLeftLeftBorder chatTableCell"><div class="contact-info private-customer connect-customer" data-wording-key="openingHoursPrivate"></div><div class="contact-info business-customer" data-wording-key="openingHoursBusiness"></div></td></td>
        </tr>
      </table>
      <!-- MOBILE TABLE -->
      <table class="contactFormTextNoBorder mobile hideOver768" border="0">
        <tr style="height:0px"></tr>
        <tr>
          <td class="contactButtonTableCellLeftNoBorder"><p class="font1" data-wording-key="email"></p></td>
        </tr>
        <tr>
          <td class="contactButtonTableCellLeftBottomBorder"><div class="button-contact contactFormWriteUs" data-wording-key="writeUs"></div></td>
        </tr>
        <tr>
          <td class="contactButtonTableCellLeftTopBorder"><p class="font1 private-customer connect-customer" data-wording-key="openingHoursPrivateMobile"></p><p class="font1 business-customer" data-wording-key="openingHoursBusinessMobile"></p></td>
        </tr>
        <tr>
          <td class="contactButtonTableCellLeftBottomBorder"><div class="button-contact phone-number private-number2 private-customer connect-customer" data-wording-key="callUsPrivateMobile"></div> <div class="button-contact phone-number business-number business-customer" data-wording-key="callUsBusinessMobile"></div></td>
        </tr>
        <tr>
          <td class="contactButtonTableCellLeftTopBorder chatTableCell"><p class="font1 chatMobile private-customer connect-customer" data-wording-key="openingHoursChatMobile"></p><p class="font1 chatMobile business-customer" data-wording-key="openingHoursChatBusinessMobile"></p><div class="recommendedChannel recommendedChatMobile" data-wording-key="recommendedChannel"></div></td>
        </tr>
        <tr>
          <td class="contactButtonTableCellLeftNoBorder chatTableCell"><div class="button-contact button-chat button-offline" data-wording-key="chatNotOnline"></div></td>
        </tr>
      </table>
    </div>
    <!-- AUTOMATED FORM -->
    {{request_form}}
  </div>
</div>

<script>
  //The form is fully hidden initially

  //Set up all needed variables
  var portal = window.location.hostname;
  var fullLink = window.location.href;
  var infoBoxWording = fillInfoBoxWording();
  var customerType;  //FÃ¼r Privat, business oder connect
  var currentLanguage = $('html').attr('lang');
  var header = $('#HeaderID');
  var fullMailform = $('.requestform');  //Whole Mail Form
  var introText = $('.contactFormInfoTextClass');
  var customerTypeDropdown = $('.request_ticket_form_id');
  var requestReasonDropdown;
  var requestReasonDropdownNesty;
  var requestReasonTag;
  var contactInfos = $('.contactFormTextNoBorder');
  var infoTextField = $('.contactFormNote');
  var infoText = $('.contactFormTextInfo');
  var backButton = $('.text-back');

  //business & private Kontaktangaben
  var privateContact = $('.private-customer');
  var businessContact = $('.business-customer')

  //Mailform fields, with label and Input field
  var mailFormOrderNumberOrPhoneNumber;  //Order number, Phone on digitec Connect
  var mailFormSubject = $('.request_subject');
  var mailFormMessage = $('.request_description');
  var mailFormMailInput = $('.request_anonymous_requester_email');
  var commitButton = $('input[name ="commit"]');
  //Mailform fields, labels and input fields separated
  var mailFormAttachmentDropZone = $('#upload-dropzone');
  var mailFormAttachmentLabel = $('label[for="request-attachments"]')
  var mailFormSubjectLabel = $('#request_subject_label');
  var mailFormSubjectTextField = $('#request_subject');
  var mailFormMessageLabel = $('#request_description_label');
  var mailFormMessageTextField = $('#request_description');

  //Variable checkers
  var contactFormIsShown = 0; // 0 Shows Infotext and 1 shows OrderNumber Field

  //List of tags to hide OrderNumber Input Field
  var reasonsForNoOrderNumber = ["webform_case_product_advice_it", "webform_case_product_advice_network", "webform_case_product_advice_consumer",
  "webform_case_product_advice_photo", "webform_case_product_advice_home", "webform_case_product_advice_diy", "webform_case_delete_account", "webform_case_cant_login",
  "webform_case_offer", "webform_case_no_bill"]

  //intial setup
  setPortalDependantVariables();
  setCustomerType();
  //checkForFeedbackForm();

  function setPortalDependantVariables(){
    switch (portal){
      case 'helpcenter.digitec.ch':
      case 'helpcenter.galaxus.ch':
      case 'helpcenter.galaxus.de':
        requestReasonDropdown = $('.request_custom_fields_360014169819');
        requestReasonDropdownNesty = '.request_custom_fields_360014169819' + ' a.nesty-input';
        mailFormOrderNumberOrPhoneNumber = $('.request_custom_fields_360007585419');
        requestReasonDropdownContents = $('#request_custom_fields_360014169819');
        infoTextField.insertAfter(requestReasonDropdown);
        mailFormMailInput.insertAfter(requestReasonDropdown);
        contactInfos.insertAfter(infoTextField);
        regularHelpcenterEntryPoint();
        var linkEnd = fullLink.slice(-8);
        if (linkEnd == 'requests'){
          onDropdownChange();
          showContactForm();
        }
        fullMailform.show();
        break;
      case 'helpcenter.connect.digitec.ch':
        requestReasonDropdown = $('.request_custom_fields_360021132800');
        requestReasonDropdownNesty = '.request_custom_fields_360021132800' + ' a.nesty-input';
        mailFormOrderNumberOrPhoneNumber = $('.request_custom_fields_360021132820');
        requestReasonDropdownContents = $('#request_custom_fields_360021132800');
        infoTextField.insertAfter(requestReasonDropdown);
        mailFormMailInput.insertAfter(requestReasonDropdown);
        contactInfos.insertAfter(infoTextField);
        connectHelpcenterEntryPoint();
        var linkEnd = fullLink.slice(-8);
        if (linkEnd == 'requests'){
          onDropdownChangeConnect();
          showContactForm();
        }
        fullMailform.show();
        break;
      default:
        requestReasonDropdown = $('.request_custom_fields_360014169819');
        requestReasonDropdownNesty = '.request_custom_fields_360014169819' + ' a.nesty-input';
        mailFormOrderNumberOrPhoneNumber = $('.request_custom_fields_360007585419');
        requestReasonDropdownContents = $('#request_custom_fields_360014169819');
        infoTextField.insertAfter(requestReasonDropdown);
        mailFormMailInput.insertAfter(requestReasonDropdown);
        contactInfos.insertAfter(infoTextField);
        regularHelpcenterEntryPoint();
        var linkEnd = fullLink.slice(-8);
        if (linkEnd == 'requests'){
          onDropdownChange();
          showContactForm();
        }
        fullMailform.show();
        break;
    }
  }

  function setCustomerType(){
    //Kundentyp setzen
    customerType = sessionStorage.getItem('customerType');
    if (fullLink.includes('39231')){
      customerType = 'private-customer';
      sessionStorage.setItem('customerType', customerType)
    }
    if (fullLink.includes('360000554760')){
      customerType = 'business-customer';
      sessionStorage.setItem('customerType', customerType)
    }
    if (fullLink.includes('360002056120')){
      customerType = 'connect-customer';
      sessionStorage.setItem('customerType', customerType)
    }
    if (customerType == 'private-customer'){
      // Removes Offers for Private Customers
      var categoryToRemove = 'webform_case_offer';
      try {
        var catJson = JSON.parse(requestReasonDropdownContents.attr("data-tagger"));
        requestReasonDropdownContents.attr("data-tagger", removeCategoryFromJson(catJson, categoryToRemove));
      }
      catch (e) { // Initial wird das Formular immer geladen ohne Kundentyp und deshalb hier etwas unschÃ¶n gecatcht. FunktionalitÃ¤t ist jedoch nicht kritisch 
      }
    }
    isFormAttachmentRequired();
  }

  function removeCategoryFromJson(json, categoryToRemove){  	
    for (var i = 0; i < json.length; i++){
      if (json[i].value == categoryToRemove){
        json.splice(i,1);
      }
    }
  return JSON.stringify(json);
  }

  function regularHelpcenterEntryPoint(){
    introText.show();
    customerTypeDropdown.show();
    requestReasonDropdown.show();
    backButton.hide();
    infoTextField.hide();
    contactInfos.hide();
    mailFormOrderNumberOrPhoneNumber.hide();
    mailFormSubject.hide();
    mailFormMessage.hide();
    mailFormAttachmentDropZone.hide();
    mailFormAttachmentLabel.hide();
    mailFormMailInput.hide();
    commitButton.hide();
    isFormAttachmentRequired();
  }

  function connectHelpcenterEntryPoint(){
    introText.show();
    customerTypeDropdown.hide();
    requestReasonDropdown.show();
    backButton.hide();
    infoTextField.hide();
    contactInfos.hide();
    mailFormOrderNumberOrPhoneNumber.hide();
    mailFormSubject.hide();
    mailFormMessage.hide();
    mailFormAttachmentDropZone.hide();
    mailFormAttachmentLabel.hide();
    mailFormMailInput.hide();
    commitButton.hide();
    isFormAttachmentRequired();
  }
  
  //Aktion bei Ãnderung des RequestReasonDropdown
  requestReasonDropdown.on('change', function(){
    if (requestReasonDropdownContents.attr('value') != ''){
      if (customerType == 'connect-customer'){
        onDropdownChangeConnect();
      } else {
        onDropdownChange();
      }
      try {
        removeChatBasedOnRequestType();
        updateChatConnectionAfterDropdownChange();
      }
      catch (e) {
        console.log(e); 
      } 
    }
  });

  
  function onDropdownChange(){
    requestReasonTag = requestReasonDropdownContents.attr('value').replace('//duplicate', '');
    infoText.html(infoBoxWording[requestReasonTag][currentLanguage]);
    //Update Label and Template
    if (infoBoxWording[requestReasonTag][currentLanguage + 'MailTemplate']){
      mailFormMessageTextField.val(infoBoxWording[requestReasonTag][currentLanguage + 'MailTemplate'])
    } else {
      mailFormMessageTextField.val('')
    }
    if (infoBoxWording[requestReasonTag][currentLanguage + 'DescriptionLabel']){
      mailFormMessageLabel.html(infoBoxWording[requestReasonTag][currentLanguage + 'DescriptionLabel'])
    } else {
      switch (currentLanguage) {
        case 'de':
          mailFormMessageLabel.html('Beschreibung')
          break;
        case 'fr':
          mailFormMessageLabel.html('Description')
          break;
        case 'it':
          mailFormMessageLabel.html('Descrizione')
          break;
        case 'en-US':
          mailFormMessageLabel.html('Description')
          break;
      }
    }
    mailFormSubjectTextField.val($(requestReasonDropdownNesty).text());  //Autofill Mail Subject
    customerTypeDropdown.hide();
    //Sichtbare Objekte nur Ã¤ndern, falls Kontaktformular noch nicht angezeigt
    if (contactFormIsShown == 0) {
      introText.hide();
      backButton.hide();
      mailFormOrderNumberOrPhoneNumber.hide();
      mailFormSubject.hide();
      mailFormMessage.hide();
      mailFormAttachmentDropZone.hide();
      mailFormAttachmentLabel.hide();
      mailFormMailInput.hide();
      commitButton.hide();
      contactInfos.show();
      $('.' + customerType).show();
      infoTextField.show();
    }
    //OrderNumber Feld verstecken wenn nicht benÃ¶tigt
    if (reasonsForNoOrderNumber.indexOf(requestReasonTag) >= 0){
      mailFormOrderNumberOrPhoneNumber.hide()
    } else {
      if (contactFormIsShown == 1) { mailFormOrderNumberOrPhoneNumber.show() }
    }
  } 

  function onDropdownChangeConnect(){
    requestReasonTag = requestReasonDropdownContents.attr('value').replace('//duplicate', '');
    infoText.html(infoBoxWording[requestReasonTag][currentLanguage]);
    //Update Label and Template
    if (infoBoxWording[requestReasonTag][currentLanguage + 'MailTemplate']){
      mailFormMessageTextField.val(infoBoxWording[requestReasonTag][currentLanguage + 'MailTemplate'])
    } else {
      mailFormMessageTextField.val('')
    }
    if (infoBoxWording[requestReasonTag][currentLanguage + 'DescriptionLabel']){
      mailFormMessageLabel.html(infoBoxWording[requestReasonTag][currentLanguage + 'DescriptionLabel'])
    } else {
      switch (currentLanguage) {
        case 'de':
          mailFormMessageLabel.html('Beschreibung')
          break;
        case 'fr':
          mailFormMessageLabel.html('Description')
          break;
        case 'it':
          mailFormMessageLabel.html('Descrizione')
          break;
        case 'en-US':
          mailFormMessageLabel.html('Description')
          break;
      }
    }
    mailFormSubjectTextField.val($(requestReasonDropdownNesty).text());  //Autofill Mail Subject
    customerTypeDropdown.hide();
    //Sichtbare Objekte nur Ã¤ndern, falls Kontaktformular noch nicht angezeigt
    if (contactFormIsShown == 0) {
      backButton.hide();
      mailFormOrderNumberOrPhoneNumber.hide();
      mailFormSubject.hide();
      mailFormMessage.hide();
      mailFormAttachmentDropZone.hide();
      mailFormAttachmentLabel.hide();
      mailFormMailInput.hide();
      commitButton.hide();
      contactInfos.show();
      $('.' + customerType).show();
      infoTextField.hide();
      introText.hide();
    }
    //OrderNumber Feld verstecken wenn nicht benÃ¶tigt
    if (reasonsForNoOrderNumber.indexOf(requestReasonTag) >= 0){
      mailFormOrderNumberOrPhoneNumber.hide()
    } else {
      if (contactFormIsShown == 1) { mailFormOrderNumberOrPhoneNumber.show() }
    }
  }  

  //AKTIONEN IN DEN KONTAKTINFOS
  //Aktion bei Klick auf "Schreib uns" Button
  $('.contactFormWriteUs').on("click", function () {
    showContactForm();
  })
  function showContactForm(){
    contactFormIsShown = 1;
    backButton.show();
    introText.hide();
    infoTextField.hide();
    contactInfos.hide();
    customerTypeDropdown.hide();
    mailFormOrderNumberOrPhoneNumber.show();
    mailFormSubject.hide();
    mailFormMessage.show();
    mailFormAttachmentDropZone.show();
    mailFormAttachmentLabel.show();
    mailFormMailInput.show();
    commitButton.show();
    //OrderNumber Feld verstecken wenn nicht benÃ¶tigt
    if (reasonsForNoOrderNumber.indexOf(requestReasonTag) >= 0){
      mailFormOrderNumberOrPhoneNumber.hide();
    } else {
      mailFormOrderNumberOrPhoneNumber.show();
    }
  }

  //Aktionen bei Klick auf "Ruf uns an"
  $('.private-number').on("click", function () {
    var popup = document.getElementById("phoneNumberPrivate");
    popup.classList.toggle("show");
  }) 
  $('.private-number2').on("click", function () {
   var popup = document.getElementById("phoneNumberPrivateMobile");
   popup.classList.toggle("show");
  }) 
  $('.business-number').on("click", function () {
    var popup = document.getElementById("phoneNumberBusiness");
    popup.classList.toggle("show");
  })
  $('.business-number2').on("click", function () {
    var popup = document.getElementById("phoneNumberBusinessMobile");
  	popup.classList.toggle("show");
  })
  //Aktion bei Klick auf "Chat" 
  $('.button-chat').on("click", function () {
    checkForTagChanges();
    openChat();
    setEventListernerForChatStart();
  }); 
  //Aktion bei Klick auf back Button
  $('.text-back').on("click", function (){
    contactFormIsShown = 0;
    if (customerType == 'connect-customer'){
      onDropdownChangeConnect()
    } else {
      onDropdownChange();
    }
  })

    
  // TICKET FORM ATTACHMENT CHANGES
  // Function to start observing node for mutations
  var startObserveMutations = function (nodeSelector, options, callbackFunction) {
    var node = document.querySelector(nodeSelector);
    if (node) {
      var observer = new MutationObserver(callbackFunction);
      observer.observe(node, options);
      return observer;
    }
  };
  
  // Callback function to execute when mutations in form attachments or dropdown are observed:
  // clear or select Attachment checkbox according to dropdown
  var mutationObservedForm = function (mutationsList) {
	  mutationsList.forEach(function (mutation) {
		  if (mutation.type == 'childList') {
			  setFormAttachmentCheckbox();
			  }
	  });
  };

  // Define some variables for requiring form attachments
  var errorMessageId = "";
  var attachmentCheckboxField = 'request_custom_fields_360007967480';
  var attachmentCheckboxId = '#' + attachmentCheckboxField;
  var attachmentErrorNotification = setErrorMessage();
  var formDropdownClass = '.request_custom_fields_360014169819';
  var formObserveMutationOptions = { childList: true, subtree: true };
  $('.request_custom_fields_360007967480').insertAfter('#request-attachments-pool');
  var attachmentErrorElt = $('.' + attachmentCheckboxField + ' .notification-error');

  // Clear or select checkbox according to dropdown and attachments:
  // Set Attachment checkbox if no attachments required, or if attachments are required and at least one is uploaded, otherwise clear it
  function setFormAttachmentCheckbox() {
	  if (isFormAttachmentRequired()) {
		  if ($('#request-attachments-pool .upload-item').length) {
			  selectCheckbox(attachmentCheckboxId);
		  }else {
			  clearCheckbox(attachmentCheckboxId);
		  }
	  }else {
		  selectCheckbox(attachmentCheckboxId);
	  }
  }

  // Return true if dropdown option 'ABCD' is selected
  function isFormAttachmentRequired() {
	  if($(formDropdownClass + ' a.nesty-input').attr('aria-expanded') && 
    (requestReasonTag == 'webform_case_damaged_product')){
		  errorMessageId = currentLanguage + '1';
		  attachmentErrorNotification = setErrorMessage();
		  attachmentErrorElt.text(attachmentErrorNotification);
		  return true;
	  }
	  if($(formDropdownClass + ' a.nesty-input').attr('aria-expanded') &&
	  (requestReasonTag == 'webform_case_wrong_product')){
		  errorMessageId = currentLanguage + '2';
		  attachmentErrorNotification = setErrorMessage();
		  attachmentErrorElt.text(attachmentErrorNotification);
		  return true;
	  }
	  return false;
  }

  // Select checkbox
  function selectCheckbox(eltselector) {
	  $(eltselector).prop('checked', true);
  }

  // Clear checkbox
  function clearCheckbox(eltselector) {
	  $(eltselector).prop('checked', false);
  }
                                                                                              
  // If attachment checkbox field exists, select it,
  // and watch for changes to attachments and dropdown
  if ($(attachmentCheckboxId).length) {
	  selectCheckbox(attachmentCheckboxId);
	  startObserveMutations('#request-attachments-pool', formObserveMutationOptions, mutationObservedForm);
	  startObserveMutations(formDropdownClass, formObserveMutationOptions, mutationObservedForm);
  }

  // Adjust attachment error notification
  if (true) {
	  attachmentErrorNotification = setErrorMessage();
	  attachmentErrorElt.text(attachmentErrorNotification);
  }
  
  function setErrorMessage() {
  	return infoBoxWording["attachment-errors"][errorMessageId]
  }

  setFormAttachmentCheckbox();
  clearCheckbox(attachmentCheckboxId);

  setTimeout(function() { setFormAttachmentCheckbox() }, 500);





  ///////////////////////////////////////////////////////////////////////////////Event Tracking/////////////////////////////////////////////////////

  
  function sendGARequestOpeningHours(action){
    ga('send', 'event', 'Opening Hours', action, customerType + ' ' + currentLanguage);
  }
  
  //Phone Number Tracking
  
	$('.phone-number').on("click", function () {
    sendGARequestOpeningHours('Click Phone Button');
    sendGARequestOpeningHours('Click Phone/Mail/Chat Button');
  }) 
  
  //Contact Form Tracking
  
  $('.contactFormWriteUs').on("click", function () {
    sendGARequestOpeningHours('Click Mail Button');
    sendGARequestOpeningHours('Click Phone/Mail/Chat Button');
  }) 
  
  //Chat Tracking
  
  $('.button-chat').on("click", function () {
    sendGARequestOpeningHours('Click Chat Button');
    sendGARequestOpeningHours('Click Phone/Mail/Chat Button');
  }) 


  // Request Reason Tracking

  $('.request_custom_fields_360014169819').on("change",function() {
    ga('send', 'event', 'Opening Hours', 'ShowsInfo', $('.request_custom_fields_360014169819' + ' a.nesty-input').text());                                                                                     
  });


   //////////////////////////Downvote-button Formular////////////////////////////

   /*
  function checkForFeedbackForm(){
    if (sessionStorage.getItem("referrer")) {
      referrer = sessionStorage.getItem("referrer");
    }
  if (document.referrer.indexOf('articles') !== -1 && sessionStorage.getItem('Feedback') != 0 && sessionStorage.getItem('Feedback') != null || $('#request_description').val() == '' && sessionStorage.getItem('Feedback') != null) {   
    // Bezeichnung des Helpcenter Artikels
    var subjectTitel = sessionStorage.getItem('articleHeader');
    contactFormIsShown = 2; // 0 Shows Infotext and 1 shows OrderNumber field
    
    //Felder automatisch befÃ¼llen 
    window.addEventListener('load', function() {
      requestReasonDropdownContents.attr('value' , 'webform_case_other_request_order'); //Grund der Anfrage setzen////
    })
    $('input[name="request[subject]"]').val('Feedback'); //Betreff gesetzt //// 
    $('input[name="request[anonymous_requester_email]"]').val('feedback.helpcenter@digitecgalaxus.ch');//Mail setzen////
    mailFormMessageLabel.text(infoBoxWording['outputFeedbackLabelPart1'][currentLanguage] + subjectTitel);//Label des Mailformulars anhand des Helpcenter Artikels setzen////
    
    //Bezeichnung Formular und Introtext Ã¼berschreiben
    header.attr('data-wording-key', 'feedbackHeader');
    introText.attr('data-wording-key', 'feedbackDescription');
    
    //Felder fÃ¼r Feedbackformular anzeigen/verstecken
    $('.form-field:not(.request_ticket_form_id)').show();
    requestReasonDropdown.hide();
    mailFormSubject.hide();
    commitButton.show();
    mailFormMailInput.hide();
    mailFormOrderNumberOrPhoneNumber.hide();
    customerTypeDropdown.hide();
      
    $('.request-form footer').show();

    //Text vor dem Submittbutton mit CSS Anpassungen
    $('.request-form footer').css('margin-top', '0px')
    $('.request-form footer').css('padding-top', '0px')
    $('.request-form footer').prepend(infoBoxWording['feedbackThanks'][currentLanguage]);
    sessionStorage.removeItem('Feedback');
  }
    else{
      sessionStorage.removeItem('Feedback');
    }
  }
  */
  
  ////////////////////CHAT Table Cell entfernen///////////////////////////

  // Entfernt ChatTabeCell, wenn Bedigungen erfÃ¼llt sind
  function removeChatBasedOnRequestType(){
    if(isGermany() || isBusinessRequestReasonWithoutChat() || isConnectWithoutChat()){
      $('.chatTableCell').hide();
    }else{
      $('.chatTableCell').show();
    }
  }

  function isConnectWithoutChat(){
    if(customerType == 'connect-customer' && currentLanguage != 'fr'){
      return true;
    }else{
      return false;
    }
  }

  // Deaktiviert den Chat fÃ¼r Connect und Germany
  function isGermany(){
    var hideChat;
    switch(portal){
      case'helpcenter.digitec.ch':
      case'helpcenter.galaxus.ch':
      case'helpcenter.connect.digitec.ch':
        hideChat = false;
        break;
      case'helpcenter.galaxus.de':
        hideChat = true;
        break;
      default:
        hideChat = false;
        break;
    }
    return hideChat;
  }

  //Deaktiviert den Chat fÃ¼r einige AnfragegrÃ¼nde bei B2B
  function isBusinessRequestReasonWithoutChat(){
    if(requestReasonTag == 'webform_case_offer' || (requestReasonTag == 'webform_case_delete_account' && customerType == 'business-customer')){
      return true;
    }else {
      return false;
    }
  }
</script>