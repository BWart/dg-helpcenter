<div class="container-divider"></div>
<div class="container">
  <nav class="sub-nav">
    {{breadcrumbs}}
    {{search submit=false}}
  </nav>

  <h1 class="Header" id="HeaderID" data-wording-key="headerTitle">
      <!--{{t 'submit_a_request'}}{{#if follow_up}}<span class='follow-up-hint'>{{follow_up}}</span>{{/if}}-->
  </h1>

  <div class="form requestform" id="requestForm">
    <h4 class="contactFormInfoText2" data-wording-key="contactFormInfoText"></h4>
    <a class="button-back" data-wording-key="backButtonText"></a>
    <div class="contactFormNote">
      <div class="contactFormText">
        <h2><div class="contactFormTextTitel" data-wording-key="contactFormNoteTitel"></div></h2>
        <h4><div class="contactFormTextInfo"></div></h4>
        <!--<h4></h4>-->
      </div>
    </div>
    {{chat}}

    <!-- CONTACT FORM TABLES -->
    <div class="contactFormTextNoBorder">
      <table>
        <tr>
          <td class="contactButtonTableCellLeftNoBorder" border="0"><h2><div data-wording-key="questionNotAnswered"></div></h2></td>
        </tr>
      </table>
      <!-- DESKTOP TABLE -->
      <table class="contactFormTextNoBorder nomobile hideUnder767" border="0">
        <tr style="height:0px"></tr>
        <tr>
          <td class="contactButtonTableCellLeft"><h4 data-wording-key="email"></h4></td>
          <td class="contactButtonTableCellLeftLeftBorder"><h4 data-wording-key="phone"></h4></td>
          <td class="contactButtonTableCellLeftLeftBorder chatTableCell"><h4 class="chatLabel" data-wording-key="chat"></h4><div class="recommendedChannel" data-wording-key="recommendedChannel"></div></td>
        </tr>
        <tr>
          <td class="contactButtonTableCellLeft"><a class="button-contact contactFormWriteUs" data-wording-key="writeUs"></a></td>
          <td class="contactButtonTableCellLeftLeftBorder"><div class="button-contact phone-number private-number private-customer" data-wording-key="callUsPrivate"></div><div class="button-contact phone-number business-number business-customer" data-wording-key="callUsBusiness"></div></td>
          <td class="contactButtonTableCellLeftLeftBorder chatTableCell"><a class="button-contact button-chat button-offline" data-wording-key="chatNotOnline"></a></td>
        </tr>
        <tr>
          <td class="contactButtonTableCellLeft"></td>
          <td class="contactButtonTableCellLeftLeftBorder"><div class="contact-info private-customer" data-wording-key="openingHoursPrivate"></div><div class="contact-info business-customer" data-wording-key="openingHoursBusiness"></div></td>
          <td class="contactButtonTableCellLeftLeftBorder chatTableCell"><div class="contact-info private-customer" data-wording-key="openingHoursPrivate"></div></td>
        </tr>
      </table>
      <!-- MOBILE TABLE -->
      <table class="contactFormTextNoBorder mobile hideOver768" border="0">
        <tr style="height:0px"></tr>
        <tr>
          <td class="contactButtonTableCellLeftNoBorder"><p class="font1" data-wording-key="email"></p></td>
        </tr>
        <tr>
          <td class="contactButtonTableCellLeftBottomBorder"><a class="button-contact contactFormWriteUs" data-wording-key="writeUs"></a></td>
        </tr>
        <tr>
          <td class="contactButtonTableCellLeftTopBorder"><p class="font1" data-wording-key="phone"></p></td>
        </tr>
        <tr>
          <td class="contactButtonTableCellLeftBottomBorder"><div class="button-contact phone-number private-number2 private-customer" data-wording-key="callUsPrivateMobile"></div> <div class="button-contact phone-number business-number business-customer" data-wording-key="callUsBusinessMobile"></div></td>
        </tr>
        <tr>
          <td class="contactButtonTableCellLeftTopBorder chatTableCell"><p class="font1 chatMobile">Chat</p><div class="recommendedChannel recommendedChatMobile" data-wording-key="recommendedChannel"></div></td>
        </tr>
        <tr>
          <td class="contactButtonTableCellLeftNoBorder chatTableCell"><a class="button-contact button-chat button-offline" data-wording-key="chatNotOnline"></a></td>
        </tr>
      </table>
    </div>
    <!-- AUTOMATED FORM -->
    {{request_form}}
  </div>
</div>

<script>
  //The form is fully hidden initially

  //Set up all needed variables
  var portal = window.location.hostname;
  var fullLink = window.location.href;
  var infoBoxWording = fillInfoBoxWording();
  var customerType;  //FÃ¼r Privat, business oder connect
  var currentLanguage = $('html').attr('lang');
  var header = $('#HeaderID');
  var fullMailform = $('.requestform');  //Whole Mail Form
  var introText = $('.contactFormInfoText2');
  var customerTypeDropdown = $('.request_ticket_form_id');
  var requestReasonDropdown;
  var requestReasonTag;
  var infoTextField = $('.contactFormText');
  var contactInfos = $('.contactFormTextNoBorder');
  var infoTextField = $('.contactFormNote');
  var infoText = $('.contactFormTextInfo');
  var backButton = $('.button-back');

  //business & private Kontaktangaben
  var privateContact = $('.private-customer');
  var businessContact = $('.business-customer')

  //Mailform fields, with label and Input field
  var mailFormOrderNumber;  //Order number, not on digitec Connect
  var mailFormConnectNumber;  //Phone number, digitec Connect only
  var mailFormSubject = $('.request_subject');
  var mailFormMessage = $('.request_description');
  var mailFormMailInput = $('.request_anonymous_requester_email');
  var commitButton = $('input[name ="commit"]');
  //Mailform fields, labels and input fields separated
  var mailFormAttachmentDropZone = $('#upload-dropzone');
  var mailFormAttachmentLabel = $('label[for="request-attachments"]')
  var mailFormSubjectLabel = $('#request_subject_label');
  var mailFormSubjectTextField = $('#request_subject');
  var mailFormMessageLabel = $('#request_description_label');
  var mailFormMessageTextField = $('#request_description');

  //Variable checkers
  var contactFormIsShown = 0;

  //intial setup
  setPortalDependantVariables();
  setCustomerType();

  function setPortalDependantVariables(){
    switch (portal){
      case 'helpcenter.digitec.ch':
        requestReasonDropdown = $('.request_custom_fields_360014169819');
        mailFormOrderNumber = $('.request_custom_fields_360007585419');
        requestReasonDropdownContents = $('#request_custom_fields_360014169819');
        infoTextField.insertAfter(requestReasonDropdown);
        mailFormMailInput.insertAfter(requestReasonDropdown);
        contactInfos.insertAfter(infoTextField);
        regularHelpcenterEntryPoint();
        var linkEnd = fullLink.slice(-8);
        if (linkEnd == 'requests'){
          showContactForm();
        }
        fullMailform.show();
        break;
      case 'helpcenter.galaxus.ch':
        requestReasonDropdown = $('.request_custom_fields_360014169819');
        mailFormOrderNumber = $('.request_custom_fields_360007585419');
        requestReasonDropdownContents = $('#request_custom_fields_360014169819');
        infoTextField.insertAfter(requestReasonDropdown);
        mailFormMailInput.insertAfter(requestReasonDropdown);
        contactInfos.insertAfter(infoTextField);
        regularHelpcenterEntryPoint();
        var linkEnd = fullLink.slice(-8);
        if (linkEnd == 'requests'){
          showContactForm();
        }
        fullMailform.show();
        break;
      case 'helpcenter.galaxus.de':
        requestReasonDropdown = $('.request_custom_fields_360014169819');
        mailFormOrderNumber = $('.request_custom_fields_360007585419');
        requestReasonDropdownContents = $('#request_custom_fields_360014169819');
        infoTextField.insertAfter(requestReasonDropdown);
        mailFormMailInput.insertAfter(requestReasonDropdown);
        contactInfos.insertAfter(infoTextField);
        regularHelpcenterEntryPoint();
        var linkEnd = fullLink.slice(-8);
        if (linkEnd == 'requests'){
          showContactForm();
        }
        fullMailform.show();
        break;
      case 'helpcenter.connect.digitec.ch':
        connectHelpcenter();
        break;
      default:
        requestReasonDropdown = $('.request_custom_fields_360014169819');
        mailFormOrderNumber = $('.request_custom_fields_360007585419');
        requestReasonDropdownContents = $('#request_custom_fields_360014169819');
        infoTextField.insertAfter(requestReasonDropdown);
        mailFormMailInput.insertAfter(requestReasonDropdown);
        contactInfos.insertAfter(infoTextField);
        regularHelpcenterEntryPoint();
        var linkEnd = fullLink.slice(-8);
        if (linkEnd == 'requests'){
          showContactForm();
        }
        fullMailform.show();
        break;
    }
  }

  function setCustomerType(){
    //Kundentyp setzen
    customerType = sessionStorage.getItem('customerType');
    if (fullLink.includes('39231')){
      customerType = 'private-customer';
      sessionStorage.setItem('customerType', customerType)
    }
    if (fullLink.includes('360000554760')){
      customerType = 'business-customer';
      sessionStorage.setItem('customerType', customerType)
    }
    if (fullLink.includes('360002056120')){
      customerType = 'connect-customer';
      sessionStorage.setItem('customerType', customerType)
    }
    if (customerType == 'private-customer'){
      // Removes Offers for Private Customers
      var categoryToRemove = 'webform_case_offer';
      try {
        var catJson = JSON.parse(requestReasonDropdownContents.attr("data-tagger"));
        requestReasonDropdownContents.attr("data-tagger", removeCategoryFromJson(catJson, categoryToRemove));
      }
      catch (e) {
      }
    }
    isFormAttachmentRequired();
  }

  function removeCategoryFromJson(json, categoryToRemove){  	
    for (var i = 0; i < json.length; i++){
      if (json[i].value == categoryToRemove){
        json.splice(i,1);
      }
    }
  return JSON.stringify(json);
  }

  function regularHelpcenterEntryPoint(){
    introText.show();
    customerTypeDropdown.show();
    requestReasonDropdown.show();
    backButton.hide();
    infoTextField.hide();
    contactInfos.hide();
    mailFormOrderNumber.hide();
    mailFormSubject.hide();
    mailFormMessage.hide();
    mailFormAttachmentDropZone.hide();
    mailFormAttachmentLabel.hide();
    mailFormMailInput.hide();
    commitButton.hide();
    isFormAttachmentRequired();
  }
  
  //Aktion bei Ãnderung des RequestReasonDropdown
  requestReasonDropdown.on('change', function(){
    if (requestReasonDropdownContents.attr('value') != ''){
      onDropdownChange();
    }
  });
  function onDropdownChange(){
    requestReasonTag = requestReasonDropdownContents.attr('value');
    infoText.html(infoBoxWording[requestReasonTag][currentLanguage]);
    if (infoBoxWording[requestReasonTag][currentLanguage + 'MailTemplate']){
      mailFormMessageLabel.html(infoBoxWording[requestReasonTag][currentLanguage + 'MailTemplate'])
    }
    if (infoBoxWording[requestReasonTag][currentLanguage + 'DescriptionLabel']){
      mailFormMessageLabel.html(infoBoxWording[requestReasonTag][currentLanguage + 'DescriptionLabel'])
    }
    mailFormSubjectTextField.val($('.request_custom_fields_360014169819' + ' a.nesty-input').text());  //Autofill Mail Subject
    introText.hide();
    customerTypeDropdown.hide();
    //Sichtbare Objekte nur Ã¤ndern, falls Kontaktformular noch nicht angezeigt
    if (contactFormIsShown == 0) {
      backButton.hide();
      mailFormOrderNumber.hide();
      mailFormSubject.hide();
      mailFormMessage.hide();
      mailFormAttachmentDropZone.hide();
      mailFormAttachmentLabel.hide();
      mailFormMailInput.hide();
      commitButton.hide();
      contactInfos.show();
      $('.' + customerType).show();
      infoTextField.show();
    }
  }  

  //AKTIONEN IN DEN KONTAKTINFOS
  //Aktion bei Klick auf "Schreib uns" Button
  $('.contactFormWriteUs').on("click", function () {
    showContactForm();
  })
  function showContactForm(){
    contactFormIsShown = 1;
    backButton.show();
    introText.hide();
    infoTextField.hide();
    contactInfos.hide();
    customerTypeDropdown.hide();
    mailFormOrderNumber.show();
    mailFormSubject.hide();
    mailFormMessage.show();
    mailFormAttachmentDropZone.show();
    mailFormAttachmentLabel.show();
    mailFormMailInput.show();
    commitButton.show();
  }
  //Aktionen bei Klick auf "Ruf uns an"
  $('.private-number').on("click", function () {
    var popup = document.getElementById("phoneNumberPrivate");
    popup.classList.toggle("show");
  }) 
  $('.private-number2').on("click", function () {
   var popup = document.getElementById("phoneNumberPrivateMobile");
   popup.classList.toggle("show");
  }) 
  $('.business-number').on("click", function () {
    var popup = document.getElementById("phoneNumberBusiness");
    popup.classList.toggle("show");
  })
  $('.business-number2').on("click", function () {
    var popup = document.getElementById("phoneNumberBusinessMobile");
  	popup.classList.toggle("show");
  })
  //Aktion bei Klick auf "Chat" 
  //TODO: CHAT INTEGRIEREN
  $('.button-chat').on("click", function () {
    openChat();
  }); 
  //Aktion bei Klick auf back Button
  $('.button-back').on("click", function (){
    contactFormIsShown = 0;
    onDropdownChange();
  })



    
  // TICKET FORM ATTACHMENT CHANGES
  
  // Function to start observing node for mutations
  var startObserveMutations = function (nodeSelector, options, callbackFunction) {
    var node = document.querySelector(nodeSelector);
    if (node) {
      var observer = new MutationObserver(callbackFunction);
      observer.observe(node, options);
      return observer;
    }
  };
  
  // Callback function to execute when mutations in form attachments or dropdown are observed:
  // clear or select Attachment checkbox according to dropdown
  var mutationObservedForm = function (mutationsList) {
	  mutationsList.forEach(function (mutation) {
		  if (mutation.type == 'childList') {
			  setFormAttachmentCheckbox();
			  }
	  });
  };

  // Define some variables for requiring form attachments
  var errorMessageId = "";
  var attachmentCheckboxField = 'request_custom_fields_360007967480';
  var attachmentCheckboxId = '#' + attachmentCheckboxField;
  var attachmentErrorNotification = setErrorMessage();
  var formDropdownClass = '.request_custom_fields_360014169819';
  var formObserveMutationOptions = { childList: true, subtree: true };
  $('.request_custom_fields_360007967480').insertAfter('#request-attachments-pool');
  var attachmentErrorElt = $('.' + attachmentCheckboxField + ' .notification-error');

        //requestReasonDropdown = $('.request_custom_fields_360014169819');
        //mailFormOrderNumber = $('.request_custom_fields_360007585419');
        //requestReasonDropdownContents = $('#request_custom_fields_360014169819');
        //requestReasonTag = requestReasonDropdownContents.attr('value');

  // Clear or select checkbox according to dropdown and attachments:
  // Set Attachment checkbox if no attachments required, or if attachments are required and at least one is uploaded, otherwise clear it
  function setFormAttachmentCheckbox() {
	  if (isFormAttachmentRequired()) {
		  if ($('#request-attachments-pool .upload-item').length) {
			  selectCheckbox(attachmentCheckboxId);
		  }else {
			  clearCheckbox(attachmentCheckboxId);
		  }
	  }else {
		  selectCheckbox(attachmentCheckboxId);
	  }
  }

  // Return true if dropdown option 'ABCD' is selected
  function isFormAttachmentRequired() {
	  if(requestReasonTag == 'webform_case_damaged_product'){
		  errorMessageId = currentLanguage + '1';
		  attachmentErrorNotification = setErrorMessage();
		  attachmentErrorElt.text(attachmentErrorNotification);
		  return true;
	  }
	  if($(formDropdownClass + ' a.nesty-input').attr('aria-expanded') &&
	  ($(formDropdownClass + ' a.nesty-input').text() === 'Ich habe ein falsches Produkt erhalten' || $(formDropdownClass + ' a.nesty-input').text() === "Iâve received the wrong product" || $(formDropdownClass + ' a.nesty-input').text() === "Ho ricevuto un prodotto sbagliato" || $(formDropdownClass + ' a.nesty-input').text() === "J'ai reÃ§u le mauvais produit")){
		  errorMessageId = currentLanguage + '2';
		  attachmentErrorNotification = setErrorMessage();
		  attachmentErrorElt.text(attachmentErrorNotification);
		  return true;
	  }
	  return false;
  }

  // Select checkbox
  function selectCheckbox(eltselector) {
	  $(eltselector).prop('checked', true);
  }

  // Clear checkbox
  function clearCheckbox(eltselector) {
	  $(eltselector).prop('checked', false);
  }
                                                                                              
  // If attachment checkbox field exists, select it,
  // and watch for changes to attachments and dropdown
  if ($(attachmentCheckboxId).length) {
	  selectCheckbox(attachmentCheckboxId);
	  startObserveMutations('#request-attachments-pool', formObserveMutationOptions, mutationObservedForm);
	  startObserveMutations(formDropdownClass, formObserveMutationOptions, mutationObservedForm);
  }

  // Adjust attachment error notification
  if (true) {
	  attachmentErrorNotification = setErrorMessage();
	  attachmentErrorElt.text(attachmentErrorNotification);
  }
  
  function setErrorMessage() {
 	  switch(errorMessageId) {
  	  case 'de1':
    	  return 'Um dein Anliegen schnellstmÃ¶glich zu lÃ¶sen, ist ein Foto des Schadens erforderlich. Bitte fÃ¼ge deshalb eine entsprechende Datei hinzu.';
  	  case 'fr1':
    	  return 'Afin de rÃ©soudre votre demande le plus rapidement possible, une photo des dommages est nÃ©cessaire. Veuillez donc ajouter un fichier correspondant.';
  	  case 'it1':
    	  return 'Per risolvere la vostra richiesta nel piÃ¹ breve tempo possibile, Ã¨ necessaria una foto del danno. Pertanto si prega di aggiungere un file corrispondente.';
  	  case 'en-US1':
    	  return 'In order to solve your request as quickly as possible, a photo of the damage is required. Therefore please add a corresponding file.';
		  case 'de2':
			  return 'Um dein Anliegen schnellstmÃ¶glich zu lÃ¶sen, benÃ¶tigen wir ein Foto des falsch erhaltenen Produkts. Bitte fÃ¼ge deshalb eine entsprechende Datei hinzu.';
		  case 'fr2':
			  return "Afin de rÃ©soudre votre problÃ¨me le plus rapidement possible, nous avons besoin d'une photo du produit mal reÃ§u. Veuillez donc joindre un fichier appropriÃ©.";
		  case 'it2':
			  return 'Al fine di risolvere il suo problema il piÃ¹ rapidamente possibile, abbiamo bisogno di una foto del prodotto ricevuto in modo errato. Pertanto, si prega di allegare un file appropriato.';
		  case 'en-US2':
			  return 'In order to resolve your issue as soon as possible, we need a photo of the incorrectly received product. Therefore, please attach an appropriate file.';
  	  default:
        return 'Um dein Anliegen mÃ¶glichst effizient bearbeiten zu kÃ¶nnen, benÃ¶tigen wir ein Foto des betroffenen Produktes. Bitte fÃ¼ge deshalb eine entsprechende Datei hinzu.';
	  }
  }

  setFormAttachmentCheckbox();
  clearCheckbox(attachmentCheckboxId);

  setTimeout(function() { setFormAttachmentCheckbox() }, 500);

</script>